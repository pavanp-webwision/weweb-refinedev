import { DevtoolsProvider } from '@providers/devtools';
import {
  CanParams,
  CanResponse,
  CanReturnType,
  GitHubBanner,
  Refine,
} from '@refinedev/core';
import { RefineKbar, RefineKbarProvider } from '@refinedev/kbar';
import { notificationProvider, RefineSnackbarProvider } from '@refinedev/mui';
import routerProvider from '@refinedev/nextjs-router';
import { Metadata } from 'next';
import { cookies } from 'next/headers';
import React, { Suspense } from 'react';

import { ColorModeContextProvider } from '@contexts/color-mode';
import { authProvider } from '@providers/auth-provider';
import { dataProvider } from '@providers/data-provider';

export const metadata: Metadata = {
  title: 'Refine',
  description: 'Generated by create refine app',
  icons: {
    icon: '/favicon.ico',
  },
};

import { accessControlProvider } from '../accessControlProvider';

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = cookies();
  const theme = cookieStore.get('theme');
  const defaultMode = theme?.value === 'dark' ? 'dark' : 'light';

  return (
    <html lang='en'>
      <body>
        <Suspense>
          <GitHubBanner />
          <RefineKbarProvider>
            <ColorModeContextProvider defaultMode={defaultMode}>
              <RefineSnackbarProvider>
                <DevtoolsProvider>
                  <Refine
                    routerProvider={routerProvider}
                    authProvider={authProvider}
                    dataProvider={dataProvider}
                    notificationProvider={notificationProvider}
                    accessControlProvider={accessControlProvider}
                    resources={[
                      {
                        name: 'experiences',
                        list: '/experiences',
                        create: '/experiences/create',
                        edit: '/experiences/edit/:id',
                        show: '/experiences/show/:id',
                        meta: {
                          canDelete: true,
                        },
                      },
                      // {
                      //   name: "categories",
                      //   list: "/categories",
                      //   create: "/categories/create",
                      //   edit: "/categories/edit/:id",
                      //   show: "/categories/show/:id",
                      //   meta: {
                      //     canDelete: true,
                      //   },
                      // },
                    ]}
                    options={{
                      syncWithLocation: true,
                      warnWhenUnsavedChanges: true,
                      useNewQueryKeys: true,
                      projectId: 'lkfABr-m4QlSm-U8j96D',
                    }}
                  >
                    {children}
                    <RefineKbar />
                  </Refine>
                </DevtoolsProvider>
              </RefineSnackbarProvider>
            </ColorModeContextProvider>
          </RefineKbarProvider>
        </Suspense>
      </body>
    </html>
  );
}
